;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-guanbi" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 0C229.262222 0 0 229.233778 0 512S229.262222 1024 512 1024s512-229.262222 512-512S794.766222 0 512 0zM731.221333 691.000889l-40.220444 40.220444L512 552.220444l-179.000889 179.000889-40.220444-40.220444L471.779556 512l-179.000889-179.000889 40.220444-40.220444L512 471.751111l178.972444-179.000889 40.220444 40.220444L552.220444 512 731.221333 691.000889z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xiangzuo" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M788.730975 85.722964 362.695562 511.733273 788.730975 937.743582C808.336988 957.349595 808.336988 989.156022 788.730975 1008.762036 769.124961 1028.368049 737.343638 1028.368049 717.737624 1008.762036L291.702212 582.726623 291.702212 582.726623 220.708862 511.733273 256.205537 547.229948C236.599523 527.623934 236.599523 495.842611 256.205537 476.236598 256.205537 476.211494 256.205537 476.211494 256.205537 476.211494L717.737624 14.70451C737.343638-4.901503 769.124961-4.901503 788.730975 14.70451 808.336988 34.310524 808.336988 66.116951 788.730975 85.722964Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-caidan" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M0 102.4l119.872 0 0 119.872-119.872 0 0-119.872Z"  ></path>' +
    '' +
    '<path d="M229.76 102.4l794.24 0 0 119.872-794.24 0 0-119.872Z"  ></path>' +
    '' +
    '<path d="M0 451.968l119.872 0 0 119.872-119.872 0 0-119.872Z"  ></path>' +
    '' +
    '<path d="M229.76 451.968l794.24 0 0 119.872-794.24 0 0-119.872Z"  ></path>' +
    '' +
    '<path d="M0 801.728l119.872 0 0 119.872-119.872 0 0-119.872Z"  ></path>' +
    '' +
    '<path d="M229.76 801.728l794.24 0 0 119.872-794.24 0 0-119.872Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-gerenzhongxin1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M917.623467 950.784c-5.3248-175.121067-125.2864-322.167467-286.5664-369.271467 2.850133-1.3824 10.786133-6.1952 11.963733-6.8608 8.328533-4.625067 27.9552-17.902933 29.7984-19.3536 7.0144-5.3248 25.685333-22.1184 28.3648-24.866133 5.154133-5.154133 32.0512-38.690133 34.679467-42.8544 5.3248-8.362667 9.966933-17.117867 14.301867-26.094933 0.597333-1.245867 1.314133-2.321067 1.826133-3.5328 14.8992-32.119467 23.364267-67.771733 23.364267-105.489067 0-140.4928-114.295467-254.754133-254.788267-254.754133l-0.170667 0-0.170667 0c-140.4416 0-254.788267 114.244267-254.788267 254.754133 0 100.778667 59.067733 187.8016 144.196267 229.102933C248.4736 628.718933 128.546133 775.7312 123.1872 950.784c-0.068267 0.836267-0.512 1.553067-0.512 2.4064 0 0.4608 0.256 0.8192 0.290133 1.314133 0.187733 4.881067 1.416533 9.5232 3.464533 13.7216 5.649067 11.6736 17.339733 19.8656 31.163733 19.8656 14.148267 0 26.180267-8.448 31.6416-20.497067 1.4848-3.242667 2.013867-6.775467 2.4576-10.3936 0.2048-1.365333 0.802133-2.6112 0.802133-3.9936 0-1.501867-0.648533-2.747733-0.836267-4.1984 0-5.154133 0.136533-10.308267-0.068267-15.479467-0.119467-3.0208 0.682667-5.512533 1.28-8.004267L192 925.525333c10.376533-91.3408 58.487467-171.451733 128.017067-224.802133 1.28-0.682667 2.6624-1.245867 3.874133-2.065067 0.187733 0.2048 0.443733 0.426667 0.699733 0.682667 41.045333-31.061333 89.224533-52.957867 141.738667-62.071467 0.9216-0.136533 1.8432-0.238933 2.747733-0.375467 7.662933-1.245867 15.394133-2.304 23.227733-3.037867 6.8608-0.546133 13.824-0.785067 20.7872-0.955733 2.4576-0.068267 4.795733-0.290133 7.304533-0.290133 10.9568 0 21.777067 0.7168 32.4096 1.826133 0-0.1024 0.034133-0.170667 0.034133-0.273067 154.197333 15.035733 278.493867 137.506133 296.021333 291.328l-0.887467 0c0.6144 2.491733 1.416533 4.983467 1.28 8.004267-0.2048 5.188267-0.068267 10.325333-0.068267 15.479467-0.2048 1.450667-0.853333 2.696533-0.853333 4.1984 0 1.3824 0.580267 2.628267 0.785067 3.9936 0.443733 3.618133 1.058133 7.150933 2.491733 10.3936 5.512533 12.049067 17.493333 20.497067 31.6416 20.497067 13.858133 0 25.582933-8.192 31.232-19.8656 1.9968-4.1984 3.208533-8.840533 3.413333-13.7216 0.034133-0.494933 0.256-0.853333 0.256-1.314133C918.135467 952.337067 917.691733 951.620267 917.623467 950.784M333.021867 352.477867c0-103.3728 84.053333-187.4944 187.392-187.562667 103.3216 0.068267 187.374933 84.189867 187.374933 187.562667s-84.053333 187.477333-187.374933 187.5456C417.0752 539.9552 333.021867 455.850667 333.021867 352.477867"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-jia-copy" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M511.999983 85.219608c-235.112901 0-425.708822 190.595921-425.708822 425.708822 0 235.112901 190.595921 425.708822 425.708822 425.708822s425.708822-190.595921 425.708822-425.708822C937.708805 275.816746 747.111667 85.219608 511.999983 85.219608zM755.262167 541.337419l-212.854411 0 0 212.854411-60.815546 0 0-212.854411-212.854411 0 0-60.815546 212.854411 0 0-212.854411 60.815546 0 0 212.854411 212.854411 0L755.262167 541.337419z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-jian" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512.221546 64.35675c-247.225661 0-447.633017 200.348004-447.633017 447.487707 0 247.14482 200.407356 447.487707 447.633017 447.487707 247.225661 0 447.633017-200.342888 447.633017-447.487707C959.854563 264.709871 759.446183 64.35675 512.221546 64.35675L512.221546 64.35675zM753.246995 546.244942l-206.607568 0.00921 0 0-68.838831 0.005117 0 0-206.604498 0.005117 0-68.820412 206.609615-0.00921 0 0 0 0 68.838831-0.004093 206.603475-0.005117L753.248018 546.244942 753.246995 546.244942zM753.246995 546.244942"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-fanhuidingbu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M915.144 227.04 108.797 227.04c-24.761 0-44.797 20.078-44.797 44.794 0 24.762 20.036 44.8 44.797 44.8l806.347 0c24.758 0 44.796-20.038 44.796-44.8C959.94 247.118 939.902 227.04 915.144 227.04zM543.644 467.209c-17.5-17.497-45.848-17.497-63.348 0L100.179 847.284c-17.499 17.498-17.499 45.846 0 63.345 17.499 17.5 45.847 17.5 63.346 0l348.446-348.4c0 0 348.368 348.325 348.443 348.4 17.253 17.251 46.101 17.248 63.345 0 17.5-17.499 17.5-45.847 0-63.345L543.644 467.209z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-duihao" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M924.283927 336.970638c-22.550599-53.309136-54.821583-101.18554-95.924723-142.283564-41.104163-41.104163-88.976474-73.380264-142.289704-95.92984-55.206346-23.350824-113.829512-35.189454-174.252673-35.189454s-119.051443 11.837606-174.257789 35.189454c-53.309136 22.549575-101.181447 54.825676-142.284587 95.92984-41.10314 41.098024-73.379241 88.975451-95.924723 142.283564-23.349801 55.202253-35.189454 113.834628-35.189454 174.253696 0 60.423161 11.839653 119.05042 35.189454 174.257789 22.545482 53.309136 54.821583 101.180424 95.924723 142.283564 41.10314 41.104163 88.976474 73.380264 142.284587 95.925746 55.206346 23.349801 113.834628 35.18843 174.257789 35.18843s119.046327-11.837606 174.252673-35.18843c53.31323-22.545482 101.18554-54.821583 142.289704-95.925746 41.098024-41.10314 73.374124-88.975451 95.924723-142.283564 23.349801-55.207369 35.189454-113.834628 35.189454-174.257789C959.473381 450.804243 947.633728 392.172891 924.283927 336.970638zM748.652861 391.170051 477.101165 671.438269c-5.270027 5.437849-12.345166 8.433066-19.920702 8.433066-6.970762 0-13.635555-2.599198-18.767436-7.317663L274.074146 521.505491c-11.256368-10.346649-11.998265-27.928073-1.65264-39.190581 5.238304-5.697769 12.68388-8.966209 20.428262-8.966209 6.968715 0 13.632485 2.597151 18.764366 7.313569l144.447856 132.768863 252.750491-260.864286c5.275143-5.441942 12.353352-8.438183 19.930935-8.438183 7.240915 0 14.09195 2.775206 19.293415 7.814989C759.022023 362.589109 759.298316 380.186905 748.652861 391.170051z" fill="#e6454a" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)